# hyperledger fabric network generator tools
# Copyright by @hoojo
# hoojo.me@gmail.com create by 2018-09-12



# ---------------------------------------------------------------------------
# "OrdererOrgs" - Definition of organizations managing orderer nodes
# ---------------------------------------------------------------------------
OrdererOrgs:
  # ---------------------------------------------------------------------------
  # Orderer
  # ---------------------------------------------------------------------------

  #- Name: Orderer
  #    Domain: simple.com
  #    CA:
  #        Country: US
  #        Province: California
  #        Locality: San Francisco
  #    Specs:
  #      - Hostname: orderer

  {% for orderer in orderers %}
  - Name: ${orderer.name | title }
    Domain: ${orderer.domain | lower }
    CA:
        Country: US
        Province: California
        Locality: San Francisco
    # ---------------------------------------------------------------------------
    # "Specs" - See PeerOrgs below for complete description
    # ---------------------------------------------------------------------------
    Specs:
    {% if orderer.hostnames is sequence %}
      {% for hostname in orderer.hostnames %}
      - Hostname: ${hostname | lower}
      {% endfor %}
    {% elif orderer.count > 0 %}
      {% for index in range(orderer.count) %}
      - Hostname: ${orderer.name | lower}${index }
      {% endfor %}
    {% else %}
      - Hostname: ${orderer.name | lower}
    {% endif %}

  {% endfor %}

# ---------------------------------------------------------------------------
# "PeerOrgs" - Definition of organizations managing peer nodes
# ---------------------------------------------------------------------------
PeerOrgs:
  # ---------------------------------------------------------------------------
  # Org1
  # ---------------------------------------------------------------------------
  #- Name: Org1
  #  Domain: org1.foo.com
  #  EnableNodeOUs: true
  #  CA:
  #      Country: US
  #      Province: California
  #      Locality: San Francisco
    # ---------------------------------------------------------------------------
    # "Specs"
    # ---------------------------------------------------------------------------
    # Uncomment this section to enable the explicit definition of hosts in your
    # configuration.  Most users will want to use Template, below
    #
    # Specs is an array of Spec entries.  Each Spec entry consists of two fields:
    #   - Hostname:   (Required) The desired hostname, sans the domain.
    #   - CommonName: (Optional) Specifies the template or explicit override for
    #                 the CN.  By default, this is the template:
    #
    #                              "{{.Hostname}}.{{.Domain}}"
    #
    #                 which obtains its values from the Spec.Hostname and
    #                 Org.Domain, respectively.
    # ---------------------------------------------------------------------------
    # Specs:
    #   - Hostname: foo # implicitly "foo.org1.example.com"
    #     CommonName: foo27.org5.example.com # overrides Hostname-based FQDN set above
    #   - Hostname: bar
    #   - Hostname: baz
    # ---------------------------------------------------------------------------
    # "Template"
    # ---------------------------------------------------------------------------
    # Allows for the definition of 1 or more hosts that are created sequentially
    # from a template. By default, this looks like "peer%d" from 0 to Count-1.
    # You may override the number of nodes (Count), the starting index (Start)
    # or the template used to construct the name (Hostname).
    #
    # Note: Template and Specs are not mutually exclusive.  You may define both
    # sections and the aggregate nodes will be created for you.  Take care with
    # name collisions
    # ---------------------------------------------------------------------------
    #Template:
    #  Count: 2
      # Start: 5
      # Hostname: {{.Prefix}}{{.Index}} # default
    # ---------------------------------------------------------------------------
    # "Users"
    # ---------------------------------------------------------------------------
    # Count: The number of user accounts _in addition_ to Admin
    # ---------------------------------------------------------------------------
    #Users:
    #  Count: 1
  # ---------------------------------------------------------------------------
  # Org2: See "Org1" for full specification
  # ---------------------------------------------------------------------------

  {% for peer in peers %}
  - Name: ${peer.name | title }
    Domain: ${peer.name | lower }.${peer.domain | lower }
    EnableNodeOUs: true
    CA:
        Country: US
        Province: California
        Locality: San Francisco
    {% if peer.hostnames is iterable %}
    Specs:
      {% for hostname in peer.hostnames %}
      - Hostname: ${hostname | lower } # implicitly "${hostname | lower }.${peer.name | lower }.${peer.domain | lower }"
        {% if loop.first %}
        #CommonName: foo27.org5.example.com # overrides Hostname-based FQDN set above
        {% endif %}
      {% endfor %}
    {% endif %}
    Template:
      Count: ${peer.template_count }
    Users:
      Count: ${peer.user_count }

  {% endfor %}
